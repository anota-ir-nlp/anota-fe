{
  "swagger": "2.0",
  "info": {
    "title": "Anota API - Annotation Management System",
    "version": "v1"
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/annotations/": {
      "get": {
        "operationId": "annotations_list",
        "summary": "List My Annotations",
        "description": "\nMendapatkan daftar semua annotations yang dibuat oleh annotator yang sedang login.\n\n**Features:**\n- Pagination dengan default 20 items per page\n- Hanya menampilkan annotations milik user yang sedang login\n- Termasuk informasi error type, sentence, dan document\n\n**User Access:**\n- Hanya user dengan role 'Annotator' yang dapat mengakses\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar annotations berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 5,
                "next": null,
                "previous": null,
                "results": [
                  {
                    "id": 1,
                    "start_index": 0,
                    "end_index": 4,
                    "correction": "Teks",
                    "is_required": true,
                    "comments": "Perbaikan ejaan kata Text menjadi Teks",
                    "is_submitted": false,
                    "created_at": "2024-01-01T10:00:00Z",
                    "updated_at": "2024-01-01T10:00:00Z",
                    "annotator": "uuid-annotator",
                    "document": 1,
                    "sentence": 5,
                    "error_type": 1
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Hanya annotator yang dapat mengakses"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "post": {
        "operationId": "annotations_create",
        "summary": "Create New Annotation",
        "description": "\nMembuat annotation baru untuk menandai error grammatical dalam sentence.\n\n**Input Requirements:**\n- document: ID dokumen yang di-assign kepada annotator\n- sentence: ID sentence dalam dokumen tersebut\n- start_index: Posisi awal karakter error (0-based indexing)\n- end_index: Posisi akhir karakter error\n- error_type: ID tipe error yang sesuai\n- correction: Teks koreksi yang benar\n- is_required: Boolean apakah koreksi ini wajib atau opsional\n- comments: Komentar tambahan (opsional)\n\n**Business Rules:**\n- Annotator hanya dapat membuat annotation pada dokumen yang di-assign kepadanya\n- Sentence harus berada dalam dokumen yang dipilih\n- start_index harus lebih kecil dari end_index\n- Annotator akan otomatis ter-assign sebagai pembuat annotation\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document",
                "sentence",
                "start_index",
                "end_index",
                "error_type",
                "correction",
                "is_required"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen (harus di-assign kepada annotator)",
                  "type": "integer",
                  "example": 1
                },
                "sentence": {
                  "description": "ID sentence dalam dokumen",
                  "type": "integer",
                  "example": 5
                },
                "start_index": {
                  "description": "Posisi awal karakter error (0-based)",
                  "type": "integer",
                  "example": 0
                },
                "end_index": {
                  "description": "Posisi akhir karakter error",
                  "type": "integer",
                  "example": 4
                },
                "error_type": {
                  "description": "ID tipe error",
                  "type": "integer",
                  "example": 1
                },
                "correction": {
                  "description": "Teks koreksi yang benar",
                  "type": "string",
                  "example": "Teks"
                },
                "is_required": {
                  "description": "Apakah koreksi ini wajib atau opsional",
                  "type": "boolean",
                  "example": true
                },
                "comments": {
                  "description": "Komentar tambahan (opsional)",
                  "type": "string",
                  "example": "Perbaikan ejaan kata Text menjadi Teks"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Annotation berhasil dibuat",
            "examples": {
              "application/json": {
                "id": 1,
                "start_index": 0,
                "end_index": 4,
                "correction": "Teks",
                "is_required": true,
                "comments": "Perbaikan ejaan kata Text menjadi Teks",
                "is_submitted": false,
                "created_at": "2024-01-01T10:00:00Z",
                "updated_at": "2024-01-01T10:00:00Z",
                "annotator": "uuid-annotator",
                "document": 1,
                "sentence": 5,
                "error_type": 1
              }
            }
          },
          "400": {
            "description": "Data input tidak valid atau business rule violation",
            "examples": {
              "application/json": {
                "non_field_errors": [
                  "Anda tidak memiliki tugas untuk dokumen ini."
                ],
                "start_index": [
                  "Ensure this value is greater than or equal to 0."
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Hanya annotator yang dapat mengakses"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "parameters": []
    },
    "/annotations/admin/reopen-annotator/": {
      "post": {
        "operationId": "annotations_admin_reopen-annotator_create",
        "summary": "Admin Reopen Anotasi Dokumen",
        "description": "Admin/Kepala Riset membuka kembali pekerjaan anotator pada dokumen tertentu.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "user_id": {
                  "description": "UUID user annotator",
                  "type": "string"
                },
                "reason": {
                  "description": "Alasan reopen (opsional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reopen berhasil"
          },
          "404": {
            "description": "Dokumen, user, atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üõ† Admin Tools"
        ]
      },
      "parameters": []
    },
    "/annotations/admin/reopen-review/": {
      "get": {
        "operationId": "annotations_admin_reopen-review_list",
        "summary": "Get Review Detail",
        "description": "\nMendapatkan detail lengkap dari review berdasarkan ID.\n\n**Access Control:**\n- Hanya reviewer yang membuat review ini yang dapat mengakses\n- Memastikan data privacy antar reviewer\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Detail review berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": 1,
                "start_index": 0,
                "end_index": 4,
                "correction": "Teks",
                "is_required": true,
                "comments": "Setuju dengan koreksi annotator",
                "is_submitted": true,
                "created_at": "2024-01-01T11:00:00Z",
                "updated_at": "2024-01-01T11:00:00Z",
                "reviewer": "uuid-reviewer",
                "document": 1,
                "sentence": 5,
                "annotation": 1,
                "error_type": 1
              }
            }
          },
          "404": {
            "description": "Review tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner review yang dapat mengakses"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "post": {
        "operationId": "annotations_admin_reopen-review_create",
        "summary": "Admin Reopen Review Dokumen",
        "description": "Admin/Kepala Riset membuka kembali pekerjaan reviewer pada dokumen tertentu.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "user_id": {
                  "description": "UUID user reviewer",
                  "type": "string"
                },
                "reason": {
                  "description": "Alasan reopen (opsional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reopen berhasil"
          },
          "404": {
            "description": "Dokumen, user, atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üõ† Admin Tools"
        ]
      },
      "put": {
        "operationId": "annotations_admin_reopen-review_update",
        "summary": "Update Review",
        "description": "\nUpdate review yang sudah ada.\n\n**Business Rules:**\n- Hanya reviewer yang membuat review ini yang dapat mengupdate\n- Semua validation rules untuk create juga berlaku untuk update\n- Annotation reference harus konsisten dengan document/sentence\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "annotation": {
                  "description": "ID annotation",
                  "type": "integer"
                },
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "sentence": {
                  "description": "ID sentence",
                  "type": "integer"
                },
                "start_index": {
                  "description": "Posisi awal error",
                  "type": "integer"
                },
                "end_index": {
                  "description": "Posisi akhir error",
                  "type": "integer"
                },
                "error_type": {
                  "description": "ID tipe error",
                  "type": "integer"
                },
                "correction": {
                  "description": "Teks koreksi review",
                  "type": "string"
                },
                "is_required": {
                  "description": "Wajib atau opsional",
                  "type": "boolean"
                },
                "comments": {
                  "description": "Komentar reviewer",
                  "type": "string"
                },
                "is_submitted": {
                  "description": "Status submission",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review berhasil diupdate"
          },
          "400": {
            "description": "Data input tidak valid atau business rule violation"
          },
          "404": {
            "description": "Review tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner review yang dapat mengupdate"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "patch": {
        "operationId": "annotations_admin_reopen-review_partial_update",
        "summary": "Partial Update Review",
        "description": "Update sebagian field dari review",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "correction": {
                  "description": "Teks koreksi",
                  "type": "string"
                },
                "comments": {
                  "description": "Komentar reviewer",
                  "type": "string"
                },
                "is_required": {
                  "description": "Status requirement",
                  "type": "boolean"
                },
                "is_submitted": {
                  "description": "Status submission",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review berhasil diupdate"
          },
          "400": {
            "description": "Data input tidak valid"
          },
          "404": {
            "description": "Review tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner review yang dapat mengupdate"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "delete": {
        "operationId": "annotations_admin_reopen-review_delete",
        "summary": "Delete Review",
        "description": "\nMenghapus review dari sistem.\n\n**Access Control:**\n- Hanya reviewer yang membuat review ini yang dapat menghapus\n\n**‚ö†Ô∏è PERINGATAN:**\n- Action ini tidak dapat di-undo\n- Menghapus review dapat mempengaruhi inter-annotator agreement calculations\n",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Review berhasil dihapus"
          },
          "404": {
            "description": "Review tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner review yang dapat menghapus"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "parameters": []
    },
    "/annotations/error-types/": {
      "get": {
        "operationId": "annotations_error-types_list",
        "summary": "List Error Types for Project",
        "description": "\nMendapatkan daftar error types yang tersedia untuk project tertentu.\n\n**Business Logic:**\n1. Jika project_id diberikan: return default error types + project-specific error types\n2. Jika project_id tidak diberikan: return hanya default error types\n\n**Error Type Hierarchy:**\n- Default error types (project=null): Tersedia untuk semua project\n- Project-specific error types: Hanya tersedia untuk project tertentu\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "ID project untuk filter error types yang tersedia",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar error types berhasil ditemukan",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "error_code": "SPELLING_ERROR",
                  "description": "Kesalahan ejaan atau penulisan kata",
                  "project": null,
                  "project_name": null,
                  "is_default": true,
                  "created_by": null,
                  "created_by_username": null,
                  "created_at": "2024-01-01T00:00:00Z",
                  "updated_at": "2024-01-01T00:00:00Z"
                },
                {
                  "id": 25,
                  "error_code": "TECHNICAL_TERM_ERROR",
                  "description": "Kesalahan penggunaan istilah teknis spesifik project",
                  "project": 5,
                  "project_name": "Project Medical",
                  "is_default": false,
                  "created_by": "uuid-admin",
                  "created_by_username": "admin_medical",
                  "created_at": "2024-01-15T00:00:00Z",
                  "updated_at": "2024-01-15T00:00:00Z"
                }
              ]
            }
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "post": {
        "operationId": "annotations_error-types_create",
        "summary": "Create Error Type",
        "description": "\nMembuat error type baru (default atau project-specific).\n\n**Permission Rules:**\n- Default error type: Hanya Kepala Riset\n- Project-specific error type: Kepala Riset atau Admin yang di-assign ke project\n\n**Input Behavior:**\n- Jika project_id diberikan: Buat project-specific error type\n- Jika project_id tidak diberikan: Buat default error type\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "error_code",
                "description"
              ],
              "type": "object",
              "properties": {
                "error_code": {
                  "description": "Kode unik untuk error type dalam scope project",
                  "type": "string",
                  "example": "TECHNICAL_TERM_ERROR"
                },
                "description": {
                  "description": "Deskripsi detail tentang error type",
                  "type": "string",
                  "example": "Kesalahan penggunaan istilah teknis spesifik project"
                },
                "project_id": {
                  "description": "ID project (opsional, jika tidak ada maka dibuat sebagai default)",
                  "type": "integer",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Error type berhasil dibuat",
            "examples": {
              "application/json": {
                "id": 25,
                "error_code": "TECHNICAL_TERM_ERROR",
                "description": "Kesalahan penggunaan istilah teknis spesifik project",
                "project": 5,
                "project_name": "Project Medical",
                "is_default": false,
                "created_by": "uuid-admin",
                "created_by_username": "admin_medical",
                "created_at": "2024-01-15T00:00:00Z",
                "updated_at": "2024-01-15T00:00:00Z"
              }
            }
          },
          "400": {
            "description": "Data input tidak valid atau permission denied",
            "examples": {
              "application/json": {
                "non_field_errors": [
                  "Anda tidak memiliki izin untuk menambah error type pada project ini."
                ],
                "error_code": [
                  "Error type 'TECHNICAL_TERM_ERROR' sudah ada dalam project ini."
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "parameters": []
    },
    "/annotations/error-types/{id}/": {
      "get": {
        "operationId": "annotations_error-types_read",
        "summary": "Get Error Type Detail",
        "description": "Mendapatkan detail lengkap dari error type berdasarkan ID",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Detail error type berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": 1,
                "error_code": "SPELLING_ERROR",
                "description": "Kesalahan ejaan atau penulisan kata",
                "created_at": "2024-01-01T00:00:00Z",
                "updated_at": "2024-01-01T00:00:00Z"
              }
            }
          },
          "404": {
            "description": "Error type tidak ditemukan"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "put": {
        "operationId": "annotations_error-types_update",
        "summary": "Update Error Type",
        "description": "\nUpdate error type yang sudah ada.\n\n**Perhatian:**\n- Mengubah error_code dapat mempengaruhi annotations yang sudah ada\n- Pastikan untuk koordinasi dengan tim sebelum mengubah error code\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "error_code": {
                  "description": "Kode unik untuk tipe error",
                  "type": "string",
                  "example": "SPELLING_ERROR_UPDATED"
                },
                "description": {
                  "description": "Deskripsi detail tentang tipe error",
                  "type": "string",
                  "example": "Kesalahan ejaan atau penulisan kata (updated)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error type berhasil diupdate",
            "examples": {
              "application/json": {
                "id": 1,
                "error_code": "SPELLING_ERROR_UPDATED",
                "description": "Kesalahan ejaan atau penulisan kata (updated)",
                "created_at": "2024-01-01T00:00:00Z",
                "updated_at": "2024-01-01T12:00:00Z"
              }
            }
          },
          "400": {
            "description": "Data input tidak valid"
          },
          "404": {
            "description": "Error type tidak ditemukan"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "patch": {
        "operationId": "annotations_error-types_partial_update",
        "summary": "Partial Update Error Type",
        "description": "Update sebagian field dari error type",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "error_code": {
                  "description": "Kode error",
                  "type": "string"
                },
                "description": {
                  "description": "Deskripsi error",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Error type berhasil diupdate"
          },
          "400": {
            "description": "Data input tidak valid"
          },
          "404": {
            "description": "Error type tidak ditemukan"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "delete": {
        "operationId": "annotations_error-types_delete",
        "summary": "Delete Error Type",
        "description": "\nMenghapus error type dari sistem.\n\n**‚ö†Ô∏è PERINGATAN:**\n- Menghapus error type akan mempengaruhi semua annotations yang menggunakan error type ini\n- Pastikan tidak ada annotations aktif yang menggunakan error type ini\n- Action ini tidak dapat di-undo\n",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Error type berhasil dihapus"
          },
          "404": {
            "description": "Error type tidak ditemukan"
          },
          "401": {
            "description": "Authentication required"
          },
          "400": {
            "description": "Error type masih digunakan oleh annotations",
            "examples": {
              "application/json": {
                "error": "Cannot delete error type. It is still being used by existing annotations."
              }
            }
          }
        },
        "tags": [
          "üîç Error Types"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this error type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/annotations/reopen/": {
      "post": {
        "operationId": "annotations_reopen_create",
        "summary": "Reopen Anotasi Dokumen (Annotator)",
        "description": "Membuka kembali dokumen yang sudah disubmit (jika belum ada review).",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "reason": {
                  "description": "Alasan reopen (opsional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reopen berhasil"
          },
          "400": {
            "description": "Validasi gagal"
          },
          "403": {
            "description": "Tidak diizinkan (sudah ada review)"
          },
          "404": {
            "description": "Dokumen atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "parameters": []
    },
    "/annotations/reviews/": {
      "get": {
        "operationId": "annotations_reviews_list",
        "summary": "List My Reviews",
        "description": "\nMendapatkan daftar semua reviews yang dibuat oleh reviewer yang sedang login.\n\n**Review System:**\n- Review adalah evaluasi terhadap annotation yang dibuat oleh annotator\n- Reviewer dapat setuju atau tidak setuju dengan annotation\n- Review membantu dalam proses quality assurance\n\n**User Access:**\n- Hanya user dengan role 'Reviewer' yang dapat mengakses\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar reviews berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                  {
                    "id": 1,
                    "start_index": 0,
                    "end_index": 4,
                    "correction": "Teks",
                    "is_required": true,
                    "comments": "Setuju dengan koreksi annotator",
                    "is_submitted": true,
                    "created_at": "2024-01-01T11:00:00Z",
                    "updated_at": "2024-01-01T11:00:00Z",
                    "reviewer": "uuid-reviewer",
                    "document": 1,
                    "sentence": 5,
                    "annotation": 1,
                    "error_type": 1
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Hanya reviewer yang dapat mengakses"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "post": {
        "operationId": "annotations_reviews_create",
        "summary": "Create New Review",
        "description": "\nMembuat review baru untuk mengevaluasi annotation yang dibuat oleh annotator.\n\n**Input Requirements:**\n- annotation: ID annotation yang akan di-review\n- document: ID dokumen (harus sama dengan annotation.document)\n- sentence: ID sentence (harus sama dengan annotation.sentence)\n- start_index: Posisi awal (dapat sama atau berbeda dengan annotation)\n- end_index: Posisi akhir (dapat sama atau berbeda dengan annotation)\n- error_type: ID tipe error (dapat sama atau berbeda dengan annotation)\n- correction: Teks koreksi hasil review\n- is_required: Boolean apakah koreksi ini wajib atau opsional\n- comments: Komentar reviewer terhadap annotation\n\n**Review Flow:**\n1. Reviewer menganalisis annotation yang dibuat annotator\n2. Reviewer dapat setuju atau memberikan koreksi alternatif\n3. Review membantu dalam consensus building dan quality control\n\n**Business Rules:**\n- Reviewer hanya dapat membuat review pada dokumen yang di-assign kepadanya\n- Annotation yang di-review harus valid dan ada\n- Document dan sentence harus konsisten dengan annotation\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "annotation",
                "document",
                "sentence",
                "start_index",
                "end_index",
                "error_type",
                "correction",
                "is_required"
              ],
              "type": "object",
              "properties": {
                "annotation": {
                  "description": "ID annotation yang akan di-review",
                  "type": "integer",
                  "example": 1
                },
                "document": {
                  "description": "ID dokumen (harus di-assign kepada reviewer)",
                  "type": "integer",
                  "example": 1
                },
                "sentence": {
                  "description": "ID sentence dalam dokumen",
                  "type": "integer",
                  "example": 5
                },
                "start_index": {
                  "description": "Posisi awal karakter error (0-based)",
                  "type": "integer",
                  "example": 0
                },
                "end_index": {
                  "description": "Posisi akhir karakter error",
                  "type": "integer",
                  "example": 4
                },
                "error_type": {
                  "description": "ID tipe error hasil review",
                  "type": "integer",
                  "example": 1
                },
                "correction": {
                  "description": "Teks koreksi hasil review",
                  "type": "string",
                  "example": "Teks"
                },
                "is_required": {
                  "description": "Apakah koreksi ini wajib atau opsional",
                  "type": "boolean",
                  "example": true
                },
                "comments": {
                  "description": "Komentar reviewer terhadap annotation",
                  "type": "string",
                  "example": "Setuju dengan koreksi annotator, ejaan sudah benar"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review berhasil dibuat",
            "examples": {
              "application/json": {
                "id": 1,
                "start_index": 0,
                "end_index": 4,
                "correction": "Teks",
                "is_required": true,
                "comments": "Setuju dengan koreksi annotator",
                "is_submitted": false,
                "created_at": "2024-01-01T11:00:00Z",
                "updated_at": "2024-01-01T11:00:00Z",
                "reviewer": "uuid-reviewer",
                "document": 1,
                "sentence": 5,
                "annotation": 1,
                "error_type": 1
              }
            }
          },
          "400": {
            "description": "Data input tidak valid atau business rule violation",
            "examples": {
              "application/json": {
                "non_field_errors": [
                  "Anotasi tidak sesuai dengan dokumen yang dipilih."
                ],
                "annotation": [
                  "This field is required."
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Hanya reviewer yang dapat mengakses"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "parameters": []
    },
    "/annotations/reviews/reopen/": {
      "post": {
        "operationId": "annotations_reviews_reopen_create",
        "summary": "Reopen Review Dokumen (Reviewer)",
        "description": "Membuka kembali review dokumen yang sudah disubmit.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "reason": {
                  "description": "Alasan reopen (opsional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reopen berhasil"
          },
          "400": {
            "description": "Validasi gagal"
          },
          "404": {
            "description": "Dokumen atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "parameters": []
    },
    "/annotations/reviews/submit/": {
      "post": {
        "operationId": "annotations_reviews_submit_create",
        "summary": "Submit Review Dokumen (Reviewer)",
        "description": "Menandai pekerjaan review pada sebuah dokumen sebagai selesai dan mengunci perubahan.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen yang disubmit",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submit berhasil"
          },
          "400": {
            "description": "Validasi gagal"
          },
          "404": {
            "description": "Dokumen atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üìã Reviews"
        ]
      },
      "parameters": []
    },
    "/annotations/reviews/{id}/": {
      "get": {
        "operationId": "annotations_reviews_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        },
        "tags": [
          "annotations"
        ]
      },
      "put": {
        "operationId": "annotations_reviews_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        },
        "tags": [
          "annotations"
        ]
      },
      "patch": {
        "operationId": "annotations_reviews_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        },
        "tags": [
          "annotations"
        ]
      },
      "delete": {
        "operationId": "annotations_reviews_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "annotations"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this review.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/annotations/submit/": {
      "post": {
        "operationId": "annotations_submit_create",
        "summary": "Submit Anotasi Dokumen (Annotator)",
        "description": "Menandai pekerjaan anotasi pada sebuah dokumen sebagai selesai dan mengunci perubahan.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document"
              ],
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen yang disubmit",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submit berhasil"
          },
          "400": {
            "description": "Validasi gagal"
          },
          "404": {
            "description": "Dokumen atau assignment tidak ditemukan"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "parameters": []
    },
    "/annotations/{id}/": {
      "get": {
        "operationId": "annotations_read",
        "summary": "Get Annotation Detail",
        "description": "\nMendapatkan detail lengkap dari annotation berdasarkan ID.\n\n**Access Control:**\n- Hanya annotator yang membuat annotation ini yang dapat mengakses\n- Memastikan data privacy antar annotator\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Detail annotation berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": 1,
                "start_index": 0,
                "end_index": 4,
                "correction": "Teks",
                "is_required": true,
                "comments": "Perbaikan ejaan kata Text menjadi Teks",
                "is_submitted": false,
                "created_at": "2024-01-01T10:00:00Z",
                "updated_at": "2024-01-01T10:00:00Z",
                "annotator": "uuid-annotator",
                "document": 1,
                "sentence": 5,
                "error_type": 1
              }
            }
          },
          "404": {
            "description": "Annotation tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner annotation yang dapat mengakses"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "put": {
        "operationId": "annotations_update",
        "summary": "Update Annotation",
        "description": "\nUpdate annotation yang sudah ada.\n\n**Business Rules:**\n- Hanya annotator yang membuat annotation ini yang dapat mengupdate\n- Semua validation rules untuk create juga berlaku untuk update\n- Perubahan pada dokumen/sentence assignment akan divalidasi ulang\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "document": {
                  "description": "ID dokumen",
                  "type": "integer"
                },
                "sentence": {
                  "description": "ID sentence",
                  "type": "integer"
                },
                "start_index": {
                  "description": "Posisi awal error",
                  "type": "integer"
                },
                "end_index": {
                  "description": "Posisi akhir error",
                  "type": "integer"
                },
                "error_type": {
                  "description": "ID tipe error",
                  "type": "integer"
                },
                "correction": {
                  "description": "Teks koreksi",
                  "type": "string"
                },
                "is_required": {
                  "description": "Wajib atau opsional",
                  "type": "boolean"
                },
                "comments": {
                  "description": "Komentar tambahan",
                  "type": "string"
                },
                "is_submitted": {
                  "description": "Status submission",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Annotation berhasil diupdate"
          },
          "400": {
            "description": "Data input tidak valid atau business rule violation"
          },
          "404": {
            "description": "Annotation tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner annotation yang dapat mengupdate"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "patch": {
        "operationId": "annotations_partial_update",
        "summary": "Partial Update Annotation",
        "description": "Update sebagian field dari annotation",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "correction": {
                  "description": "Teks koreksi",
                  "type": "string"
                },
                "comments": {
                  "description": "Komentar",
                  "type": "string"
                },
                "is_required": {
                  "description": "Status requirement",
                  "type": "boolean"
                },
                "is_submitted": {
                  "description": "Status submission",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Annotation berhasil diupdate"
          },
          "400": {
            "description": "Data input tidak valid"
          },
          "404": {
            "description": "Annotation tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner annotation yang dapat mengupdate"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "delete": {
        "operationId": "annotations_delete",
        "summary": "Delete Annotation",
        "description": "\nMenghapus annotation dari sistem.\n\n**Access Control:**\n- Hanya annotator yang membuat annotation ini yang dapat menghapus\n\n**‚ö†Ô∏è PERINGATAN:**\n- Action ini tidak dapat di-undo\n- Review yang terkait dengan annotation ini juga akan terpengaruh\n",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Annotation berhasil dihapus"
          },
          "404": {
            "description": "Annotation tidak ditemukan"
          },
          "403": {
            "description": "Hanya owner annotation yang dapat menghapus"
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "tags": [
          "üìù Annotations"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this annotation.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/assignments/": {
      "post": {
        "operationId": "assignments_create",
        "summary": "Assign Document to User",
        "description": "\nAssign dokumen kepada user tertentu untuk proses anotasi atau review.\n\n**Constraints:**\n- Hanya user dengan role Annotators atau Reviewers yang dapat di-assign\n- Satu dokumen dapat di-assign ke multiple users\n- Hanya admin yang dapat melakukan assignment\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document_id",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "ID dokumen yang akan di-assign",
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID user yang akan menerima assignment",
                  "type": "string",
                  "format": "uuid"
                },
                "notes": {
                  "description": "Optional notes untuk assignment ini",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignment berhasil dengan tracking lengkap",
            "examples": {
              "application/json": {
                "message": "Dokumen berhasil ditugaskan",
                "assignment_record": {
                  "id": 1,
                  "assigned_user": "annotator1",
                  "assigned_by": "admin1",
                  "assigned_at": "2024-01-01T10:00:00Z",
                  "notes": "Initial assignment for annotation task",
                  "is_active": true
                }
              }
            }
          },
          "400": {
            "description": "User tidak memiliki role yang sesuai"
          },
          "404": {
            "description": "Dokumen atau user tidak ditemukan"
          }
        },
        "tags": [
          "üìã Document Assignment"
        ]
      },
      "delete": {
        "operationId": "assignments_delete",
        "summary": "Unassign Document from User",
        "description": "\nMenghapus assignment dokumen dari user tertentu.\n\n**Note:**\n- Tidak menghapus annotations yang sudah dibuat\n- User tidak akan bisa mengakses dokumen untuk anotasi baru\n- Hanya admin yang dapat melakukan unassignment\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document_id",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "ID dokumen yang akan di-unassign",
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID user yang akan di-unassign",
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unassignment berhasil",
            "examples": {
              "application/json": {
                "message": "Tugas dokumen berhasil dihapus"
              }
            }
          },
          "404": {
            "description": "Dokumen atau user tidak ditemukan"
          }
        },
        "tags": [
          "üìã Document Assignment"
        ]
      },
      "parameters": []
    },
    "/dashboard/": {
      "get": {
        "operationId": "dashboard_list",
        "summary": "Dashboard Summary",
        "description": "Get a summary of annotations, reviews, and inter-annotator agreement.",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "description": "Filter by project ID",
            "type": "integer"
          },
          {
            "name": "document_id",
            "in": "query",
            "description": "Filter by document ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "üìä Dashboard"
        ]
      },
      "parameters": []
    },
    "/dashboard/annotators/{user_id}/": {
      "get": {
        "operationId": "dashboard_annotators_read",
        "summary": "Annotator Performance Dashboard",
        "description": "Get a performance summary for a specific annotator.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Annotator's user ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Filter by project ID",
            "type": "integer"
          },
          {
            "name": "document_id",
            "in": "query",
            "description": "Filter by document ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "üìä Dashboard"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/dashboard/iaa/": {
      "get": {
        "operationId": "dashboard_iaa_list",
        "summary": "Inter-Annotator Agreement (Annotator vs Reviewer)",
        "description": "Calculate Inter-Annotator Agreement (IAA) between an annotator and a reviewer.",
        "parameters": [
          {
            "name": "annotator_id",
            "in": "query",
            "description": "Annotator's user ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "reviewer_id",
            "in": "query",
            "description": "Reviewer's user ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Filter by project ID",
            "type": "integer"
          },
          {
            "name": "document_id",
            "in": "query",
            "description": "Filter by document ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "üìä Dashboard"
        ]
      },
      "parameters": []
    },
    "/dashboard/reviewers/{user_id}/": {
      "get": {
        "operationId": "dashboard_reviewers_read",
        "summary": "Reviewer Performance Dashboard",
        "description": "Get a performance summary for a specific reviewer.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Reviewer's user ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "query",
            "description": "Filter by project ID",
            "type": "integer"
          },
          {
            "name": "document_id",
            "in": "query",
            "description": "Filter by document ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "üìä Dashboard"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/": {
      "get": {
        "operationId": "documents_list",
        "summary": "List All Documents",
        "description": "\nMendapatkan daftar semua dokumen yang tersedia di sistem.\n\n**Features:**\n- Pagination dengan default 20 items per page\n- Hanya admin yang dapat mengakses endpoint ini\n- Menampilkan informasi dokumen tanpa sentences detail\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar dokumen berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 10,
                "next": "http://localhost:8000/api/v1/document/?page=2",
                "previous": null,
                "results": [
                  {
                    "id": 1,
                    "title": "Dokumen Sample",
                    "text": "Ini adalah teks dokumen...",
                    "created_at": "2024-01-01T00:00:00Z",
                    "updated_at": "2024-01-01T00:00:00Z",
                    "assigned_to": [
                      1,
                      2,
                      3
                    ]
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Hanya admin yang dapat mengakses"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "post": {
        "operationId": "documents_create",
        "summary": "Create New Document",
        "description": "\nMembuat dokumen baru dan secara otomatis split text menjadi sentences.\n\n**Auto-Processing:**\n- Text akan dipecah menjadi sentences menggunakan NLTK\n- Setiap sentence akan disimpan sebagai object terpisah\n- Mendukung fallback parsing jika NLTK tidak tersedia\n- assigned_by otomatis di-set ke user yang membuat dokumen\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "title",
                "text"
              ],
              "type": "object",
              "properties": {
                "title": {
                  "description": "Judul dokumen (max 1024 karakter)",
                  "type": "string"
                },
                "text": {
                  "description": "Teks dokumen yang akan di-split menjadi sentences",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Dokumen berhasil dibuat",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Dokumen Baru",
                "text": "Ini adalah teks dokumen. Ini adalah kalimat kedua.",
                "created_at": "2024-01-01T00:00:00Z",
                "updated_at": "2024-01-01T00:00:00Z",
                "assigned_by": "8ae9adeb-6e03-47c5-b25f-b36ec97e44ca",
                "assigned_to": [],
                "sentences": [
                  {
                    "id": 1,
                    "text": "Ini adalah teks dokumen.",
                    "m2_text": "",
                    "corrected_text": "",
                    "has_error": false,
                    "created_at": "2024-01-01T00:00:00Z",
                    "updated_at": "2024-01-01T00:00:00Z",
                    "document": 1
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "parameters": []
    },
    "/documents/assignment/": {
      "post": {
        "operationId": "documents_assignment_create",
        "summary": "Assign Document to User",
        "description": "\nAssign dokumen kepada user tertentu untuk proses anotasi atau review.\n\n**Constraints:**\n- Hanya user dengan role Annotators atau Reviewers yang dapat di-assign\n- Satu dokumen dapat di-assign ke multiple users\n- Hanya admin yang dapat melakukan assignment\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document_id",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "ID dokumen yang akan di-assign",
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID user yang akan menerima assignment",
                  "type": "string",
                  "format": "uuid"
                },
                "notes": {
                  "description": "Optional notes untuk assignment ini",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignment berhasil dengan tracking lengkap",
            "examples": {
              "application/json": {
                "message": "Dokumen berhasil ditugaskan",
                "assignment_record": {
                  "id": 1,
                  "assigned_user": "annotator1",
                  "assigned_by": "admin1",
                  "assigned_at": "2024-01-01T10:00:00Z",
                  "notes": "Initial assignment for annotation task",
                  "is_active": true
                }
              }
            }
          },
          "400": {
            "description": "User tidak memiliki role yang sesuai"
          },
          "404": {
            "description": "Dokumen atau user tidak ditemukan"
          }
        },
        "tags": [
          "üìã Document Assignment"
        ]
      },
      "delete": {
        "operationId": "documents_assignment_delete",
        "summary": "Unassign Document from User",
        "description": "\nMenghapus assignment dokumen dari user tertentu.\n\n**Note:**\n- Tidak menghapus annotations yang sudah dibuat\n- User tidak akan bisa mengakses dokumen untuk anotasi baru\n- Hanya admin yang dapat melakukan unassignment\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "document_id",
                "user_id"
              ],
              "type": "object",
              "properties": {
                "document_id": {
                  "description": "ID dokumen yang akan di-unassign",
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID user yang akan di-unassign",
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unassignment berhasil",
            "examples": {
              "application/json": {
                "message": "Tugas dokumen berhasil dihapus"
              }
            }
          },
          "404": {
            "description": "Dokumen atau user tidak ditemukan"
          }
        },
        "tags": [
          "üìã Document Assignment"
        ]
      },
      "parameters": []
    },
    "/documents/my-assigned/{id}/": {
      "get": {
        "operationId": "documents_my-assigned_read",
        "summary": "Get My Assigned Document Detail",
        "description": "\nMendapatkan detail lengkap dokumen yang di-assign kepada user yang sedang login.\n\n**Security Features:**\n- Automatic filtering: hanya dokumen yang di-assign yang bisa diakses\n- Built-in authorization: tidak perlu manual permission check\n- 404 response jika dokumen tidak di-assign atau tidak exist\n\n**Response includes:**\n- Informasi dasar dokumen (id, title, text, timestamps)\n- Daftar lengkap sentences dengan sentence_id\n- Assignment information\n\n**Use Cases:**\n- Annotator mengakses dokumen untuk proses anotasi\n- Reviewer mengakses dokumen untuk proses review\n- Frontend mendapatkan sentence_id untuk annotation workflow\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Detail dokumen berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Dokumen untuk Anotasi",
                "text": "Ini adalah teks dokumen yang akan diannotasi. Kalimat kedua untuk testing.",
                "created_at": "2024-01-01T10:00:00Z",
                "updated_at": "2024-01-01T10:00:00Z",
                "assigned_to": [
                  "uuid-user1",
                  "uuid-user2"
                ],
                "sentences": [
                  {
                    "id": 123,
                    "text": "Ini adalah teks dokumen yang akan diannotasi.",
                    "m2_text": "",
                    "corrected_text": "",
                    "has_error": false,
                    "created_at": "2024-01-01T10:00:00Z",
                    "updated_at": "2024-01-01T10:00:00Z",
                    "document": 1
                  },
                  {
                    "id": 124,
                    "text": "Kalimat kedua untuk testing.",
                    "m2_text": "",
                    "corrected_text": "",
                    "has_error": false,
                    "created_at": "2024-01-01T10:00:00Z",
                    "updated_at": "2024-01-01T10:00:00Z",
                    "document": 1
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Dokumen tidak ditemukan atau tidak di-assign kepada user",
            "examples": {
              "application/json": {
                "detail": "Tidak ditemukan."
              }
            }
          },
          "401": {
            "description": "User belum login",
            "examples": {
              "application/json": {
                "detail": "Authentication credentials were not provided."
              }
            }
          },
          "403": {
            "description": "User tidak memiliki role yang sesuai",
            "examples": {
              "application/json": {
                "error": "Anda tidak memiliki izin untuk melakukan tindakan ini."
              }
            }
          }
        },
        "tags": [
          "üìã User Documents"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/documents/preview/": {
      "post": {
        "operationId": "documents_preview_create",
        "summary": "Preview Sentence Count",
        "description": "\nMenghitung jumlah kalimat yang akan dihasilkan dari text tanpa menyimpan ke database.\n\n**Use Cases:**\n- Preview sebelum membuat dokumen\n- Validasi text input\n- Estimasi workload untuk annotator\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "text"
              ],
              "type": "object",
              "properties": {
                "text": {
                  "description": "Teks yang akan dihitung jumlah kalimatnya",
                  "type": "string",
                  "example": "Ini adalah kalimat pertama. Ini adalah kalimat kedua! Apakah ini kalimat ketiga?"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hasil perhitungan dengan detail text dan preview sentences",
            "examples": {
              "application/json": {
                "text": "Ini adalah kalimat pertama. Ini adalah kalimat kedua! Apakah ini kalimat ketiga?",
                "sentence_count": 3,
                "sentences": [
                  "Ini adalah kalimat pertama.",
                  "Ini adalah kalimat kedua!",
                  "Apakah ini kalimat ketiga?"
                ]
              }
            }
          },
          "400": {
            "description": "Input tidak valid",
            "examples": {
              "application/json": {
                "error": "Teks tidak boleh kosong"
              }
            }
          },
          "403": {
            "description": "Hanya admin yang dapat mengakses endpoint ini"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "parameters": []
    },
    "/documents/{id}/": {
      "get": {
        "operationId": "documents_read",
        "summary": "Get Document Detail",
        "description": "\nMendapatkan detail lengkap dokumen termasuk semua sentences.\n\n**Response includes:**\n- Informasi dasar dokumen\n- Daftar lengkap sentences\n- Assignment information\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Detail dokumen berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Dokumen Sample",
                "text": "Ini adalah teks dokumen. Ini adalah kalimat kedua.",
                "created_at": "2024-01-01T00:00:00Z",
                "updated_at": "2024-01-01T00:00:00Z",
                "assigned_to": [
                  1,
                  2
                ],
                "sentences": [
                  {
                    "id": 1,
                    "text": "Ini adalah teks dokumen.",
                    "m2_text": "",
                    "corrected_text": "",
                    "has_error": false,
                    "created_at": "2024-01-01T00:00:00Z",
                    "updated_at": "2024-01-01T00:00:00Z",
                    "document": 1
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Dokumen tidak ditemukan"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "delete": {
        "operationId": "documents_delete",
        "summary": "Delete Document",
        "description": "\nMenghapus dokumen dari sistem.\n\n**Warning:**\n- Menghapus dokumen akan menghapus semua sentences\n- Semua annotations yang terkait akan ikut terhapus\n- Action ini tidak dapat di-undo\n",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Dokumen berhasil dihapus"
          },
          "404": {
            "description": "Dokumen tidak ditemukan"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this document.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/documents/{id}/export/{fmt}/": {
      "get": {
        "operationId": "documents_export_read",
        "summary": "Export Document",
        "description": "Export data dokumen menjadi dua format: parallel TSV (original\tcorrected) atau M2-like.\nGunakan parameter path `fmt` dengan nilai `parallel` atau `m2`.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "description": "ID dokumen",
            "required": true,
            "type": "integer"
          },
          {
            "name": "fmt",
            "in": "path",
            "description": "Format export (parallel/m2)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "File export dikembalikan sebagai attachment"
          },
          "400": {
            "description": "Format tidak didukung"
          },
          "404": {
            "description": "Dokumen tidak ditemukan"
          }
        },
        "tags": [
          "üìÑ Document Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "fmt",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/login/": {
      "post": {
        "operationId": "login_create",
        "summary": "User Login",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "password"
              ],
              "type": "object",
              "properties": {
                "username": {
                  "description": "Username atau email",
                  "type": "string"
                },
                "password": {
                  "description": "Password user",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login berhasil",
            "examples": {
              "application/json": {
                "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
                "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
              }
            }
          },
          "401": {
            "description": "Login gagal",
            "examples": {
              "application/json": {
                "detail": "Kredensial tidak valid"
              }
            }
          }
        },
        "tags": [
          "üîê Authentication"
        ]
      },
      "parameters": []
    },
    "/projects/": {
      "get": {
        "operationId": "projects_list",
        "summary": "List Projects",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Project"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "post": {
        "operationId": "projects_create",
        "summary": "Create Project",
        "description": "Hanya Admin dan Kepala Riset yang dapat membuat project",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": []
    },
    "/projects/{id}/": {
      "get": {
        "operationId": "projects_read",
        "summary": "Retrieve Project",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "put": {
        "operationId": "projects_update",
        "summary": "Update Project",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "patch": {
        "operationId": "projects_partial_update",
        "summary": "Partial Update Project",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "delete": {
        "operationId": "projects_delete",
        "summary": "Delete Project",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{id}/assign_admin/": {
      "post": {
        "operationId": "projects_assign_admin",
        "summary": "Assign Admin to Project",
        "description": "Hanya Kepala Riset yang dapat assign admin ke project",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "type": "object",
              "properties": {
                "user_id": {
                  "description": "UUID admin yang akan di-assign",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil assign admin ke project",
            "examples": {
              "application/json": {
                "message": "Admin berhasil ditugaskan ke proyek"
              }
            }
          },
          "400": {
            "description": "User tidak memiliki role Admin"
          },
          "403": {
            "description": "Hanya Kepala Riset yang dapat assign admin"
          },
          "404": {
            "description": "User tidak ditemukan"
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{id}/assigned-users/": {
      "get": {
        "operationId": "projects_assigned_users",
        "summary": "List Assigned Users in Project",
        "description": "Mengembalikan daftar user yang di-assign pada dokumen dalam project tertentu.\nUser yang ditampilkan merupakan gabungan unik dari semua assignment dokumen di project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Daftar user yang di-assign pada project"
          },
          "404": {
            "description": "Project tidak ditemukan"
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{id}/documents/": {
      "get": {
        "operationId": "projects_documents",
        "summary": "List Documents in Project",
        "description": "Menampilkan semua dokumen di dalam project tertentu. Admin hanya dapat mengakses project yang di-assign kepadanya, sementara Kepala Riset dapat mengakses semua project.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Daftar dokumen dalam project"
          },
          "404": {
            "description": "Project tidak ditemukan"
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/projects/{id}/unassign_admin/": {
      "post": {
        "operationId": "projects_unassign_admin",
        "summary": "Unassign Admin from Project",
        "description": "Hanya Kepala Riset yang dapat unassign admin dari project",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "type": "object",
              "properties": {
                "user_id": {
                  "description": "UUID admin yang akan di-unassign",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil unassign admin dari project",
            "examples": {
              "application/json": {
                "message": "Tugas admin dari proyek berhasil dihapus"
              }
            }
          },
          "403": {
            "description": "Hanya Kepala Riset yang dapat unassign admin"
          },
          "404": {
            "description": "User tidak ditemukan"
          }
        },
        "tags": [
          "üìÅ Project Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/token/refresh/": {
      "post": {
        "operationId": "token_refresh_create",
        "summary": "Refresh JWT Token",
        "description": "\nRefresh JWT access token menggunakan refresh token.\n\n**Token Refresh Flow:**\n1. Kirim refresh token yang valid\n2. Sistem akan validate refresh token\n3. Jika valid, sistem akan return access token baru\n4. Access token baru dapat digunakan untuk authenticated requests\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "refresh"
              ],
              "type": "object",
              "properties": {
                "refresh": {
                  "description": "Refresh token yang valid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token refresh berhasil",
            "examples": {
              "application/json": {
                "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
              }
            }
          },
          "401": {
            "description": "Token refresh tidak valid"
          }
        },
        "tags": [
          "üîê Authentication"
        ]
      },
      "parameters": []
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "summary": "List All Users",
        "description": "Mendapatkan daftar semua user dengan pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar users berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 10,
                "next": "http://localhost:8000/api/v1/users/?page=2",
                "previous": null,
                "results": [
                  {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "username": "admin1",
                    "email": "admin1@example.com",
                    "full_name": "Admin Pertama",
                    "roles": [
                      "Admin"
                    ],
                    "date_joined": "2024-01-01T00:00:00Z"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": []
    },
    "/users/admin-password-reset/": {
      "post": {
        "operationId": "users_admin-password-reset_create",
        "summary": "Admin Reset User Password",
        "description": "\nAdmin dapat reset password user lain dan mengirim email notifikasi dengan password baru.\n\n**Use Case:**\n- User lupa password dan membutuhkan bantuan admin (disarankan gunakan alur OTP terlebih dahulu)\n- Admin maintenance untuk reset password user\n- Recovery akses untuk user yang bermasalah\n\n**Features:**\n- Generate password baru secara otomatis (12 karakter aman)\n- Kirim email notifikasi dengan password baru\n- Hanya admin atau kepala riset yang dapat menggunakan\n\nCatatan: Sistem kini menggunakan OTP untuk reset password mandiri oleh user. Endpoint ini untuk tindakan administratif.\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "type": "object",
              "properties": {
                "user_id": {
                  "description": "ID user yang akan direset passwordnya",
                  "type": "string"
                },
                "send_email": {
                  "description": "Kirim email password baru ke pengguna (default: true)",
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password berhasil direset",
            "examples": {
              "application/json": {
                "message": "Password berhasil direset untuk pengguna testuser_bodhi",
                "user_id": "1e80d41d-0002-4d52-bf6c-72e32b80bf76",
                "username": "testuser_bodhi",
                "new_password": "aB3dF7kL9m2q",
                "email_status": "sent",
                "email_message": "Email password baru berhasil dikirim"
              }
            }
          },
          "404": {
            "description": "Pengguna tidak ditemukan",
            "examples": {
              "application/json": {
                "error": "Pengguna tidak ditemukan"
              }
            }
          },
          "400": {
            "description": "Data input tidak valid",
            "examples": {
              "application/json": {
                "error": "user_id harus diisi"
              }
            }
          }
        },
        "tags": [
          "üîê Authentication"
        ]
      },
      "parameters": []
    },
    "/users/available-roles/": {
      "get": {
        "operationId": "users_available-roles_list",
        "summary": "Get Available Roles",
        "description": "\nMendapatkan daftar semua roles yang tersedia dalam sistem.\n\n**Use Case:**\n- Menampilkan dropdown roles di frontend\n- Validasi roles sebelum assignment\n- Reference untuk admin management\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Daftar roles berhasil ditemukan",
            "examples": {
              "application/json": {
                "roles": [
                  "Admin",
                  "Annotator",
                  "Reviewer",
                  "Kepala Riset"
                ]
              }
            }
          }
        },
        "tags": [
          "üîß Role Management"
        ]
      },
      "parameters": []
    },
    "/users/create/": {
      "post": {
        "operationId": "users_create_create",
        "summary": "Registrasi User Baru",
        "description": "\nMembuat user baru dengan password yang di-generate secara otomatis menggunakan algoritma secure random.\n\n**Auto-Generated Features:**\n- Password dibuat secara random dengan kombinasi huruf, angka, dan simbol (12 karakter)\n- Tidak perlu input password saat membuat user\n\n**Email Features:**\n- Secara otomatis mengirim email kredensial ke pengguna baru\n- Dapat dimatikan dengan mengatur send_email=false\n- Dapat menyertakan login_url dalam email\n\nCatatan: Sistem kini menggunakan OTP email untuk proses reset password. Tidak ada lagi backup key.\n\n**Input yang Diperlukan:**\n- username: Username unik untuk login\n- email: Email address pengguna\n- full_name: Nama lengkap pengguna\n- institusi: Institusi/lembaga asal pengguna (optional)\n- send_email: Kirim email kredensial (default: true)\n- login_url: URL login untuk disertakan dalam email (optional)\n\n**Output:**\n- Password sementara dikembalikan dalam response\n- Status pengiriman email akan disertakan dalam response\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "email",
                "full_name"
              ],
              "type": "object",
              "properties": {
                "username": {
                  "description": "Username unik untuk login",
                  "type": "string"
                },
                "email": {
                  "description": "Email address pengguna",
                  "type": "string",
                  "format": "email"
                },
                "full_name": {
                  "description": "Nama lengkap pengguna",
                  "type": "string"
                },
                "institusi": {
                  "description": "Institusi/lembaga asal pengguna (optional)",
                  "type": "string"
                },
                "send_email": {
                  "description": "Kirim email kredensial ke pengguna (default: true)",
                  "type": "boolean",
                  "default": true
                },
                "login_url": {
                  "description": "URL login untuk disertakan dalam email (optional)",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Pengguna berhasil dibuat",
            "examples": {
              "application/json": {
                "message": "Pengguna berhasil dibuat",
                "data": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "username": "dodit",
                  "email": "dodit@example.com",
                  "full_name": "Dodit Sukma Maulana",
                  "institusi": "Universitas Gadjah Mada",
                  "password": "aB3dF7kL9m2q",
                  "email_status": "sent",
                  "email_message": "Email kredensial berhasil dikirim"
                }
              }
            }
          },
          "400": {
            "description": "Data input tidak valid",
            "examples": {
              "application/json": {
                "full_name": [
                  "Nama lengkap harus diisi."
                ],
                "username": [
                  "Username sudah digunakan"
                ],
                "email": [
                  "Email sudah terdaftar"
                ]
              }
            }
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": []
    },
    "/users/deleted/": {
      "get": {
        "operationId": "users_deleted_list",
        "summary": "List Soft Deleted Users",
        "description": "\nMendapatkan daftar semua user yang sudah di-soft delete.\n\n**Features:**\n- Hanya menampilkan user yang sudah di-soft delete\n- Pagination dengan default 20 items per page\n- Hanya admin yang dapat mengakses endpoint ini\n- Berguna untuk audit dan monitoring user yang sudah dihapus\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar deleted users berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 5,
                "next": null,
                "previous": null,
                "results": [
                  {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "username": "deleted_user",
                    "email": "deleted@example.com",
                    "full_name": "Deleted User",
                    "roles": [
                      "Annotators"
                    ],
                    "date_joined": "2024-01-01T00:00:00Z",
                    "is_deleted": true,
                    "deleted_at": "2024-01-02T12:00:00Z"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Hanya admin yang dapat mengakses"
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": []
    },
    "/users/me/": {
      "get": {
        "operationId": "users_me_list",
        "summary": "Get Current User Info",
        "description": "\nMendapatkan informasi basic user yang sedang login.\n\n**Use Case:**\n- Menampilkan profile user di frontend\n- Mengecek roles user saat ini\n- Validasi authentication status\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Informasi user berhasil ditemukan",
            "examples": {
              "application/json": {
                "id": "550e8400-e29b-41d4-a716-446655440000",
                "username": "dodit",
                "email": "dodit@example.com",
                "full_name": "Dodit Sukma Maulana",
                "roles": [
                  "Annotators",
                  "Reviewers"
                ],
                "date_joined": "2024-01-01T00:00:00Z"
              }
            }
          },
          "401": {
            "description": "Tidak terautentikasi - Pengguna belum login",
            "examples": {
              "application/json": {
                "detail": "Kredensial otentikasi tidak ditemukan"
              }
            }
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": []
    },
    "/users/me/assigned-documents/": {
      "get": {
        "operationId": "users_me_assigned-documents_list",
        "summary": "Get My Assigned Documents",
        "description": "\nMendapatkan daftar semua dokumen yang di-assign kepada user yang sedang login\ndengan informasi lengkap termasuk progress dan metadata.\n\n**Features:**\n- Pagination dengan default 20 items per page\n- Hanya menampilkan dokumen yang di-assign ke user yang sedang login\n- Diurutkan berdasarkan created_at (terbaru di atas)\n- Dapat diakses oleh Annotator dan Reviewer\n- Informasi tambahan: assigned_by, status, jumlah_sentence, institusi\n\n**Fields Tambahan:**\n- `assigned_by`: Informasi lengkap user yang melakukan assignment (id, username, full_name, institusi)\n- `status`: Progress detail dengan 6 status:\n  - \"belum_dianotasi\": Belum memulai anotasi sama sekali\n  - \"sedang_dianotasi\": Sedang dalam proses anotasi\n  - \"sudah_dianotasi\": Selesai anotasi semua sentence\n  - \"belum_direview\": Belum memulai review\n  - \"sedang_direview\": Sedang dalam proses review\n  - \"sudah_direview\": Selesai review semua sentence\n- `jumlah_sentence`: Total jumlah kalimat dalam dokumen\n- `institusi`: Institusi user yang sedang login\n\n**Use Case:**\n- Dashboard user untuk melihat task yang diberikan\n- Frontend untuk menampilkan work queue dengan progress\n- Progress tracking untuk user\n- Monitoring workload dan status completion\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar assigned documents berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 3,
                "next": null,
                "previous": null,
                "results": [
                  {
                    "id": 1,
                    "title": "Dokumen Anotasi 1",
                    "text": "Ini adalah teks dokumen untuk diannotasi. Kalimat kedua untuk testing. Kalimat ketiga juga ada.",
                    "created_at": "2024-01-01T10:00:00Z",
                    "updated_at": "2024-01-01T10:00:00Z",
                    "assigned_by": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "username": "admin_user",
                      "full_name": "Admin Utama",
                      "institusi": "Universitas Indonesia"
                    },
                    "status": "sedang_dianotasi",
                    "jumlah_sentence": 3,
                    "institusi": "Universitas Gadjah Mada"
                  },
                  {
                    "id": 2,
                    "title": "Dokumen Review 1",
                    "text": "Ini adalah teks dokumen untuk direview. Sudah ada beberapa kalimat.",
                    "created_at": "2024-01-01T09:00:00Z",
                    "updated_at": "2024-01-01T09:00:00Z",
                    "assigned_by": {
                      "id": "550e8400-e29b-41d4-a716-446655440001",
                      "username": "admin_user2",
                      "full_name": "Admin Kedua",
                      "institusi": "Institut Teknologi Bandung"
                    },
                    "status": "belum_direview",
                    "jumlah_sentence": 2,
                    "institusi": "Universitas Gadjah Mada"
                  },
                  {
                    "id": 3,
                    "title": "Dokumen Selesai",
                    "text": "Dokumen yang sudah selesai semua.",
                    "created_at": "2024-01-01T08:00:00Z",
                    "updated_at": "2024-01-01T08:00:00Z",
                    "assigned_by": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "username": "admin_user",
                      "full_name": "Admin Utama",
                      "institusi": "Universitas Indonesia"
                    },
                    "status": "sudah_direview",
                    "jumlah_sentence": 1,
                    "institusi": "Universitas Gadjah Mada"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Authentication required - User belum login"
          }
        },
        "tags": [
          "üìã User Documents"
        ]
      },
      "parameters": []
    },
    "/users/password-reset/request/": {
      "post": {
        "operationId": "users_password-reset_request_create",
        "summary": "Request Password Reset OTP",
        "description": "\nMeminta kode OTP untuk reset password yang akan dikirim via email.\n\n**Flow Baru:**\n1. User memasukkan email\n2. Sistem generate OTP 6 digit\n3. OTP dikirim via email (expire 15 menit)\n4. User gunakan OTP + password baru untuk reset\n\n**Security Features:**\n- Rate limiting: maksimal 5 request per jam\n- OTP expire dalam 15 menit\n- Maksimal 3 attempt verification per OTP\n- Auto cleanup OTP yang sudah expire\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "description": "Email user yang terdaftar",
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP berhasil dikirim",
            "examples": {
              "application/json": {
                "message": "Kode OTP telah dikirim ke email Anda",
                "email": "user@example.com",
                "expires_in_minutes": 15,
                "email_status": "sent"
              }
            }
          },
          "400": {
            "description": "Email tidak valid atau rate limit exceeded",
            "examples": {
              "application/json": {
                "email": [
                  "Email tidak terdaftar dalam sistem."
                ],
                "non_field_errors": [
                  "Terlalu banyak permintaan reset password. Coba lagi dalam 1 jam."
                ]
              }
            }
          }
        },
        "tags": [
          "üîê Authentication"
        ]
      },
      "parameters": []
    },
    "/users/password-reset/verify/": {
      "post": {
        "operationId": "users_password-reset_verify_create",
        "summary": "Verify OTP and Reset Password",
        "description": "\nVerifikasi kode OTP dan set password baru.\n\n**Requirements:**\n- Email harus terdaftar dan aktif\n- OTP harus valid dan belum expire\n- Password baru minimal 6 karakter\n\n**Features:**\n- OTP hanya bisa digunakan sekali\n- Maksimal 3 kali percobaan per OTP\n- Auto kirim email konfirmasi setelah berhasil\n- OTP otomatis dihapus setelah digunakan\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "email",
                "otp_code",
                "new_password"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "description": "Email user",
                  "type": "string",
                  "format": "email"
                },
                "otp_code": {
                  "description": "6 digit kode OTP",
                  "type": "string"
                },
                "new_password": {
                  "description": "Password baru minimal 6 karakter",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password berhasil direset",
            "examples": {
              "application/json": {
                "message": "Password berhasil direset",
                "email": "user@example.com",
                "username": "testuser",
                "email_status": "sent"
              }
            }
          },
          "400": {
            "description": "OTP tidak valid atau input salah",
            "examples": {
              "application/json": {
                "non_field_errors": [
                  "OTP sudah kedaluwarsa. Silakan request OTP baru."
                ],
                "otp_code": [
                  "Kode OTP harus berupa 6 digit angka."
                ]
              }
            }
          }
        },
        "tags": [
          "üîê Authentication"
        ]
      },
      "parameters": []
    },
    "/users/role-management/": {
      "post": {
        "operationId": "users_role-management_create",
        "summary": "Manage User Roles",
        "description": "\nMenambahkan atau menghapus role dari user.\n\n**Actions:**\n- `add`: Menambahkan role ke user\n- `remove`: Menghapus role dari user\n\n**Available Roles:**\n- Admin\n- Annotator\n- Reviewer\n- Kepala Riset\n\n**Constraints:**\n- Kepala Riset tidak dapat menghapus role Kepala Riset dari diri sendiri\n- Admin hanya bisa assign role Annotator dan Reviewer\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role berhasil diupdate",
            "examples": {
              "application/json": {
                "message": "Role \"Annotators\" berhasil ditambahkan ke pengguna dodit.",
                "user_id": "550e8400-e29b-41d4-a716-446655440000",
                "username": "dodit",
                "current_roles": [
                  "Reviewers",
                  "Annotators"
                ]
              }
            }
          },
          "400": {
            "description": "Input tidak valid atau pelanggaran constraint",
            "examples": {
              "application/json": {
                "user_id": [
                  "Pengguna tidak ditemukan"
                ],
                "role": [
                  "Role tidak valid. Role tersedia: Admin, Annotators, Reviewers, Researcher, Kepala Riset"
                ],
                "action": [
                  "Anda tidak dapat menghapus role Admin dari diri sendiri",
                  "Sistem harus memiliki minimal 2 admin"
                ]
              }
            }
          },
          "404": {
            "description": "Pengguna tidak ditemukan",
            "examples": {
              "application/json": {
                "error": "Pengguna tidak ditemukan"
              }
            }
          }
        },
        "tags": [
          "üîß Role Management"
        ]
      },
      "parameters": []
    },
    "/users/{id}/delete/": {
      "delete": {
        "operationId": "users_delete_delete",
        "summary": "Soft Delete User",
        "description": "\nMelakukan soft delete user berdasarkan ID.\n\n**Soft Delete Features:**\n- User tidak benar-benar dihapus dari database\n- User hanya ditandai sebagai deleted dan di-deactivate\n- Data annotations dan aktivitas user tetap tersimpan\n- User yang sudah di-soft delete tidak dapat login lagi\n\n**Note:** User yang sudah di-soft delete tidak akan muncul di daftar user aktif.\n",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Pengguna berhasil dihapus sementara",
            "examples": {
              "application/json": {
                "message": "Pengguna berhasil dihapus sementara",
                "username": "dodit",
                "deleted_at": "2024-01-01T12:00:00Z"
              }
            }
          },
          "404": {
            "description": "Pengguna tidak ditemukan",
            "examples": {
              "application/json": {
                "error": "Pengguna tidak ditemukan"
              }
            }
          },
          "400": {
            "description": "Pengguna sudah dalam status dihapus",
            "examples": {
              "application/json": {
                "error": "Pengguna sudah dalam status dihapus"
              }
            }
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{id}/update/": {
      "put": {
        "operationId": "users_update_update",
        "summary": "Update User",
        "description": "\nUpdate user data. Field yang dapat diubah: `username`, `email`, dan `full_name`.\n\n**Admin Access:**\n- Hanya admin yang dapat mengakses endpoint ini\n- Admin dapat mengubah semua field yang tersedia\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pengguna berhasil diperbarui",
            "examples": {
              "application/json": {
                "message": "Pengguna berhasil diperbarui",
                "data": {
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "username": "dodit_updated",
                  "email": "dodit_new@example.com",
                  "full_name": "Dodit Sukma Maulana Updated",
                  "roles": [
                    "Admin"
                  ],
                  "date_joined": "2024-01-01T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Data input tidak valid",
            "examples": {
              "application/json": {
                "username": [
                  "Username sudah digunakan"
                ],
                "email": [
                  "Email sudah terdaftar"
                ],
                "full_name": [
                  "Nama lengkap harus diisi."
                ]
              }
            }
          },
          "404": {
            "description": "Pengguna tidak ditemukan",
            "examples": {
              "application/json": {
                "error": "Pengguna tidak ditemukan"
              }
            }
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "patch": {
        "operationId": "users_update_partial_update",
        "summary": "Partial Update User",
        "description": "Partial update user data. Field yang dapat diubah: `username`, `email`, dan `full_name`.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pengguna berhasil diperbarui"
          },
          "400": {
            "description": "Data input tidak valid"
          },
          "404": {
            "description": "Pengguna tidak ditemukan"
          }
        },
        "tags": [
          "üë• User Management"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this user.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/users/{user_id}/assigned-documents/": {
      "get": {
        "operationId": "users_assigned-documents_list",
        "summary": "Get User's Assigned Documents",
        "description": "\nMendapatkan daftar semua dokumen yang di-assign kepada user tertentu.\n\n**Permission:**\n- Hanya Admin atau Kepala Riset yang dapat mengakses\n- Admin hanya dapat melihat user dengan role Annotator/Reviewer\n- Kepala Riset dapat melihat semua user\n\n**Features:**\n- Pagination dengan default 20 items per page\n- Diurutkan berdasarkan created_at (terbaru di atas)\n- Error handling jika user tidak ditemukan\n\n**Use Case:**\n- Monitoring assignment oleh admin\n- Dashboard management untuk melihat workload user\n- Audit trail untuk document assignment\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "UUID user yang ingin dilihat assigned documents-nya",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Daftar assigned documents berhasil ditemukan",
            "examples": {
              "application/json": {
                "count": 5,
                "next": "http://localhost:8000/api/v1/users/uuid-123/assigned-documents/?page=2",
                "previous": null,
                "results": [
                  {
                    "id": 1,
                    "title": "Dokumen Anotasi 1",
                    "text": "Ini adalah teks dokumen untuk diannotasi...",
                    "created_at": "2024-01-01T10:00:00Z",
                    "updated_at": "2024-01-01T10:00:00Z",
                    "assigned_to": [
                      "uuid-user1",
                      "uuid-user2"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User tidak ditemukan",
            "examples": {
              "application/json": {
                "error": "User tidak ditemukan"
              }
            }
          },
          "403": {
            "description": "Hanya Admin atau Kepala Riset yang dapat mengakses"
          }
        },
        "tags": [
          "üìã User Documents"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user_id}/roles/": {
      "get": {
        "operationId": "users_roles_list",
        "summary": "Get User Roles",
        "description": "Mendapatkan daftar roles yang dimiliki user tertentu",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID user yang ingin dilihat roles-nya",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Roles user berhasil ditemukan",
            "examples": {
              "application/json": {
                "user_id": "550e8400-e29b-41d4-a716-446655440000",
                "username": "dodit",
                "full_name": "Dodit Sukma Maulana",
                "roles": [
                  "Reviewers",
                  "Annotators"
                ]
              }
            }
          },
          "404": {
            "description": "Pengguna tidak ditemukan"
          }
        },
        "tags": [
          "üîß Role Management"
        ]
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "ErrorType": {
      "required": [
        "error_code",
        "description"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "error_code": {
          "title": "Error code",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "project": {
          "title": "Project",
          "description": "Jika null, error type ini berlaku untuk semua project (default)",
          "type": "integer",
          "x-nullable": true
        },
        "project_name": {
          "title": "Project name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "is_default": {
          "title": "Is default",
          "description": "Error type default yang akan tersedia di semua project baru",
          "type": "boolean"
        },
        "created_by": {
          "title": "Created by",
          "description": "User yang membuat error type ini",
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "x-nullable": true
        },
        "created_by_username": {
          "title": "Created by username",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Review": {
      "required": [
        "start_index",
        "end_index",
        "correction",
        "document",
        "annotation",
        "sentence",
        "error_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "error_type_details": {
          "$ref": "#/definitions/ErrorType"
        },
        "start_index": {
          "title": "Start index",
          "type": "integer",
          "maximum": 9.223372036854776e+18,
          "minimum": 0
        },
        "end_index": {
          "title": "End index",
          "type": "integer",
          "maximum": 9.223372036854776e+18,
          "minimum": 0
        },
        "correction": {
          "title": "Correction",
          "type": "string",
          "minLength": 1
        },
        "is_required": {
          "title": "Is required",
          "type": "boolean"
        },
        "comments": {
          "title": "Comments",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "is_submitted": {
          "title": "Is submitted",
          "type": "boolean"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "reviewer": {
          "title": "Reviewer",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "document": {
          "title": "Document",
          "type": "integer"
        },
        "annotation": {
          "title": "Annotation",
          "type": "integer"
        },
        "sentence": {
          "title": "Sentence",
          "type": "integer"
        },
        "error_type": {
          "title": "Error type",
          "type": "integer"
        }
      }
    },
    "Project": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "assigned_admins": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "uniqueItems": true
        }
      }
    },
    "UserRoleManagement": {
      "required": [
        "user_id",
        "role",
        "action"
      ],
      "type": "object",
      "properties": {
        "user_id": {
          "title": "User id",
          "type": "string",
          "format": "uuid"
        },
        "role": {
          "title": "Role",
          "type": "string",
          "minLength": 1
        },
        "action": {
          "title": "Action",
          "type": "string",
          "enum": [
            "add",
            "remove"
          ]
        }
      }
    },
    "UserUpdate": {
      "required": [
        "username",
        "full_name"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        },
        "email": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "full_name": {
          "title": "Full name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    }
  }
}